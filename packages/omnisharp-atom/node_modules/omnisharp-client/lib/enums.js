"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.isPluginDriver = isPluginDriver;
var Driver = exports.Driver = undefined;
(function (Driver) {
    Driver[Driver["Http"] = 0] = "Http";
    Driver[Driver["Stdio"] = 1] = "Stdio";
})(Driver || (exports.Driver = Driver = {}));
var DriverState = exports.DriverState = undefined;
(function (DriverState) {
    DriverState[DriverState["Disconnected"] = 0] = "Disconnected";
    DriverState[DriverState["Downloading"] = 1] = "Downloading";
    DriverState[DriverState["Downloaded"] = 2] = "Downloaded";
    DriverState[DriverState["Connecting"] = 3] = "Connecting";
    DriverState[DriverState["Connected"] = 4] = "Connected";
    DriverState[DriverState["Error"] = 5] = "Error";
})(DriverState || (exports.DriverState = DriverState = {}));
var Runtime = exports.Runtime = undefined;
(function (Runtime) {
    Runtime[Runtime["ClrOrMono"] = 0] = "ClrOrMono";
    Runtime[Runtime["CoreClr"] = 1] = "CoreClr";
})(Runtime || (exports.Runtime = Runtime = {}));
function isPluginDriver(driver) {
    return !!driver.updatePlugins;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9lbnVtcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztRQW9FQTtBQS9EQSxJQUFZLG1DQUFaO0FBQUEsQ0FBQSxVQUFZLE1BQVosRUFBa0I7QUFDZCxXQUFBLE9BQUEsTUFBQSxJQUFBLENBQUEsQ0FBQSxHQUFBLE1BQUEsQ0FEYztBQUVkLFdBQUEsT0FBQSxPQUFBLElBQUEsQ0FBQSxDQUFBLEdBQUEsT0FBQSxDQUZjO0NBQWxCLENBQUEsQ0FBWSxtQkFBQSxTQUFBLFNBQU0sRUFBTixDQUFBLENBQVo7QUFNQSxJQUFZLDZDQUFaO0FBQUEsQ0FBQSxVQUFZLFdBQVosRUFBdUI7QUFDbkIsZ0JBQUEsWUFBQSxjQUFBLElBQUEsQ0FBQSxDQUFBLEdBQUEsY0FBQSxDQURtQjtBQUVuQixnQkFBQSxZQUFBLGFBQUEsSUFBQSxDQUFBLENBQUEsR0FBQSxhQUFBLENBRm1CO0FBR25CLGdCQUFBLFlBQUEsWUFBQSxJQUFBLENBQUEsQ0FBQSxHQUFBLFlBQUEsQ0FIbUI7QUFNbkIsZ0JBQUEsWUFBQSxZQUFBLElBQUEsQ0FBQSxDQUFBLEdBQUEsWUFBQSxDQU5tQjtBQU9uQixnQkFBQSxZQUFBLFdBQUEsSUFBQSxDQUFBLENBQUEsR0FBQSxXQUFBLENBUG1CO0FBUW5CLGdCQUFBLFlBQUEsT0FBQSxJQUFBLENBQUEsQ0FBQSxHQUFBLE9BQUEsQ0FSbUI7Q0FBdkIsQ0FBQSxDQUFZLHdCQUFBLGNBQUEsY0FBVyxFQUFYLENBQUEsQ0FBWjtBQVdBLElBQVkscUNBQVo7QUFBQSxDQUFBLFVBQVksT0FBWixFQUFtQjtBQUNmLFlBQUEsUUFBQSxXQUFBLElBQUEsQ0FBQSxDQUFBLEdBQUEsV0FBQSxDQURlO0FBRWYsWUFBQSxRQUFBLFNBQUEsSUFBQSxDQUFBLENBQUEsR0FBQSxTQUFBLENBRmU7Q0FBbkIsQ0FBQSxDQUFZLG9CQUFBLFVBQUEsVUFBTyxFQUFQLENBQUEsQ0FBWjtBQThDQSxTQUFBLGNBQUEsQ0FBK0IsTUFBL0IsRUFBMEM7QUFBNkIsV0FBTyxDQUFDLENBQU8sT0FBUSxhQUFSLENBQTVDO0NBQTFDIiwiZmlsZSI6ImxpYi9lbnVtcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIE9tbmlTaGFycCBmcm9tIFwiLi9vbW5pc2hhcnAtc2VydmVyXCI7XG5pbXBvcnQge0lEaXNwb3NhYmxlfSBmcm9tIFwiLi9kaXNwb3NhYmxlc1wiO1xuaW1wb3J0IHtPYnNlcnZhYmxlfSBmcm9tIFwicnhqc1wiO1xuaW1wb3J0IHtSZXF1ZXN0Q29udGV4dCwgUmVzcG9uc2VDb250ZXh0LCBDb21tYW5kQ29udGV4dH0gZnJvbSBcIi4vY29udGV4dHNcIjtcblxuZXhwb3J0IGVudW0gRHJpdmVyIHtcbiAgICBIdHRwLFxuICAgIFN0ZGlvLFxuICAgIC8vVE9ETzogV2Vic29ja2V0LFxufVxuXG5leHBvcnQgZW51bSBEcml2ZXJTdGF0ZSB7XG4gICAgRGlzY29ubmVjdGVkLFxuICAgIERvd25sb2FkaW5nLFxuICAgIERvd25sb2FkZWQsXG4gICAgLy9Cb290c3RyYXBwaW5nLFxuICAgIC8vQm9vdHN0cmFwcGVkLFxuICAgIENvbm5lY3RpbmcsXG4gICAgQ29ubmVjdGVkLFxuICAgIEVycm9yXG59XG5cbmV4cG9ydCBlbnVtIFJ1bnRpbWUge1xuICAgIENsck9yTW9ubyxcbiAgICBDb3JlQ2xyXG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgSVN0YXRpY0RyaXZlciB7XG4gICAgbmV3IChvcHRpb25zOiBJRHJpdmVyT3B0aW9ucyk6IElEcml2ZXI7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgSUxvZ2dlciB7XG4gICAgbG9nKC4uLnZhbHVlczogYW55W10pOiB2b2lkO1xuICAgIGVycm9yKC4uLnZhbHVlczogYW55W10pOiB2b2lkO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIElEcml2ZXJPcHRpb25zIHtcbiAgICBwcm9qZWN0UGF0aDogc3RyaW5nO1xuICAgIHJlbW90ZT86IGJvb2xlYW47XG4gICAgZGVidWc/OiBib29sZWFuOyAvLyBTdGFydCB0aGUgZGVidWcgc2VydmVyPyAoUnVuIGZyb20gc291cmNlLCB0byBhdHRhY2ggd2l0aCBhIGRlYnVnIGhvc3QgbGlrZSBWUylcbiAgICBzZXJ2ZXJQYXRoPzogc3RyaW5nOyAvLyBTdGFydCBhIGdpdmVuIHNlcnZlciwgcGVyaGFwcyBpbiBhIGRpZmZlcmVudCBkaXJlY3RvcnkuXG4gICAgZmluZFByb2plY3Q/OiBib29sZWFuOyAvLyBTaG91bGQgdHJ5IGFuZCBmaW5kIHRoZSBwcm9qZWN0IHVzaW5nIHRoZSBwcm9qZWN0IGZpbmRlclxuICAgIGxvZ2dlcj86IElMb2dnZXI7XG4gICAgdGltZW91dD86IG51bWJlcjsgLy8gdGltZW91dCBpbiBzZWNvbmRzXG4gICAgcnVudGltZT86IFJ1bnRpbWU7XG4gICAgYWRkaXRpb25hbEFyZ3VtZW50cz86IHN0cmluZ1tdO1xuICAgIHBsdWdpbnM/OiBJT21uaXNoYXJwUGx1Z2luW107XG4gICAgdmVyc2lvbj86IHN0cmluZztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBJRHJpdmVyIGV4dGVuZHMgSURpc3Bvc2FibGUge1xuICAgIGlkOiBzdHJpbmc7XG4gICAgY29ubmVjdCgpOiB2b2lkO1xuICAgIGN1cnJlbnRTdGF0ZTogRHJpdmVyU3RhdGU7XG4gICAgZXZlbnRzOiBPYnNlcnZhYmxlPE9tbmlTaGFycC5TdGRpby5Qcm90b2NvbC5FdmVudFBhY2tldD47XG4gICAgY29tbWFuZHM6IE9ic2VydmFibGU8T21uaVNoYXJwLlN0ZGlvLlByb3RvY29sLlJlc3BvbnNlUGFja2V0PjtcbiAgICBzdGF0ZTogT2JzZXJ2YWJsZTxEcml2ZXJTdGF0ZT47XG4gICAgZGlzY29ubmVjdCgpOiB2b2lkO1xuICAgIHNlcnZlclBhdGg6IHN0cmluZztcbiAgICBwcm9qZWN0UGF0aDogc3RyaW5nO1xuICAgIHJ1bnRpbWU6IFJ1bnRpbWU7XG4gICAgcmVxdWVzdDxUUmVxdWVzdCwgVFJlc3BvbnNlPihjb21tYW5kOiBzdHJpbmcsIHJlcXVlc3Q/OiBUUmVxdWVzdCk6IE9ic2VydmFibGU8VFJlc3BvbnNlPjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBJUGx1Z2luRHJpdmVyIGV4dGVuZHMgSURyaXZlciB7XG4gICAgdXBkYXRlUGx1Z2lucyhwbHVnaW5zOiBJT21uaXNoYXJwUGx1Z2luKTogdm9pZDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzUGx1Z2luRHJpdmVyKGRyaXZlcjogYW55KTogZHJpdmVyIGlzIElQbHVnaW5Ecml2ZXIgeyByZXR1cm4gISEoPGFueT5kcml2ZXIpLnVwZGF0ZVBsdWdpbnM7IH1cblxuZXhwb3J0IGludGVyZmFjZSBPbW5pc2hhcnBDbGllbnRPcHRpb25zIGV4dGVuZHMgSURyaXZlck9wdGlvbnMge1xuICAgIGRyaXZlcj86IERyaXZlcjtcbiAgICBvbmVCYXNlZEluZGljZXM/OiBib29sZWFuO1xuICAgIHN0YXR1c1NhbXBsZVRpbWU/OiBudW1iZXI7XG4gICAgcmVzcG9uc2VTYW1wbGVUaW1lPzogbnVtYmVyO1xuICAgIGNvbmN1cnJlbmN5PzogbnVtYmVyO1xuICAgIGNvbmN1cnJlbmN5VGltZW91dD86IG51bWJlcjtcbiAgICBvbW5pc2hhcnA/OiB7XG4gICAgICAgIGRueD86IHtcbiAgICAgICAgICAgIGFsaWFzPzogc3RyaW5nO1xuICAgICAgICAgICAgcHJvamVjdHM/OiBzdHJpbmc7XG4gICAgICAgICAgICBlbmFibGVQYWNrYWdlUmVzdG9yZT86IHN0cmluZztcbiAgICAgICAgICAgIHBhY2thZ2VSZXN0b3JlVGltZW91dD86IG51bWJlcjtcbiAgICAgICAgfTtcbiAgICAgICAgZm9ybWF0dGluZ09wdGlvbnM/OiB7XG4gICAgICAgICAgICBuZXdMaW5lPzogc3RyaW5nO1xuICAgICAgICAgICAgdXNlVGFicz86IGJvb2xlYW47XG4gICAgICAgICAgICB0YWJTaXplPzogbnVtYmVyO1xuICAgICAgICB9XG4gICAgfTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBJT21uaXNoYXJwUGx1Z2luIHtcbiAgICBuYW1lPzogc3RyaW5nO1xuICAgIHZlcnNpb24/OiBzdHJpbmc7XG4gICAgbG9jYXRpb24/OiBzdHJpbmc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgT21uaXNoYXJwQ2xpZW50U3RhdHVzIHtcbiAgICBzdGF0ZTogRHJpdmVyU3RhdGU7XG4gICAgb3V0Z29pbmdSZXF1ZXN0czogbnVtYmVyO1xuICAgIGhhc091dGdvaW5nUmVxdWVzdHM6IGJvb2xlYW47XG59XG5cbmV4cG9ydCBtb2R1bGUgT21uaXNoYXJwIHtcbiAgICBleHBvcnQgaW50ZXJmYWNlIEV2ZW50cyB7XG4gICAgICAgIGV2ZW50czogT2JzZXJ2YWJsZTxPbW5pU2hhcnAuU3RkaW8uUHJvdG9jb2wuRXZlbnRQYWNrZXQ+O1xuICAgICAgICBjb21tYW5kczogT2JzZXJ2YWJsZTxPbW5pU2hhcnAuU3RkaW8uUHJvdG9jb2wuUmVzcG9uc2VQYWNrZXQ+O1xuICAgICAgICBzdGF0ZTogT2JzZXJ2YWJsZTxEcml2ZXJTdGF0ZT47XG4gICAgICAgIHN0YXR1czogT2JzZXJ2YWJsZTxPbW5pc2hhcnBDbGllbnRTdGF0dXM+O1xuICAgICAgICByZXF1ZXN0czogT2JzZXJ2YWJsZTxSZXF1ZXN0Q29udGV4dDxhbnk+PjtcbiAgICAgICAgcmVzcG9uc2VzOiBPYnNlcnZhYmxlPFJlc3BvbnNlQ29udGV4dDxhbnksIGFueT4+O1xuICAgICAgICBlcnJvcnM6IE9ic2VydmFibGU8Q29tbWFuZENvbnRleHQ8YW55Pj47XG4gICAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
