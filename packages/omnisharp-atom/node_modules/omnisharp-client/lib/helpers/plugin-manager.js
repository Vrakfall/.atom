"use strict";
var lodash_1 = require('lodash');
/* tslint:disable:no-unused-variable */
var rxjs_1 = require('rxjs');
/* tslint:enable:no-unused-variable */
var ts_disposables_1 = require('ts-disposables');
var PluginManager = (function () {
    function PluginManager(plugins) {
        var _this = this;
        this._disposable = new ts_disposables_1.CompositeDisposable();
        this._pluginsChanged = new rxjs_1.Subject();
        this._currentBootstrap = null;
        this._observePluginsChanged = this._pluginsChanged.debounceTime(1000);
        this._plugins = new Set();
        lodash_1.each(plugins, function (plugin) {
            _this._plugins.add(plugin);
        });
        this._disposable.add(this._pluginsChanged.subscribe(function () { return _this._currentBootstrap = null; }));
    }
    Object.defineProperty(PluginManager.prototype, "changed", {
        get: function () { return this._observePluginsChanged; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PluginManager.prototype, "plugins", {
        get: function () { return this._plugins; },
        enumerable: true,
        configurable: true
    });
    PluginManager.prototype.add = function (plugin) {
        this._plugins.add(plugin);
        this._pluginsChanged.next(true);
    };
    PluginManager.prototype.remove = function (plugin) {
        this._plugins.delete(plugin);
        this._pluginsChanged.next(true);
    };
    PluginManager.prototype.dispose = function () {
        this._disposable.dispose();
    };
    return PluginManager;
}());
exports.PluginManager = PluginManager;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9oZWxwZXJzL3BsdWdpbi1tYW5hZ2VyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSx1QkFBcUIsUUFBUSxDQUFDLENBQUE7QUFFOUIsdUNBQXVDO0FBQ3ZDLHFCQUFvQyxNQUFNLENBQUMsQ0FBQTtBQUMzQyxzQ0FBc0M7QUFDdEMsK0JBQWlELGdCQUFnQixDQUFDLENBQUE7QUFFbEU7SUFXSSx1QkFBWSxPQUEyQjtRQVgzQyxpQkErQkM7UUE5QlcsZ0JBQVcsR0FBRyxJQUFJLG9DQUFtQixFQUFFLENBQUM7UUFDeEMsb0JBQWUsR0FBRyxJQUFJLGNBQU8sRUFBTyxDQUFDO1FBQ3JDLHNCQUFpQixHQUFrQixJQUFJLENBQUM7UUFFeEMsMkJBQXNCLEdBQUcsSUFBSSxDQUFDLGVBQWUsQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLENBQUM7UUFHakUsYUFBUSxHQUFHLElBQUksR0FBRyxFQUFvQixDQUFDO1FBSTNDLGFBQUksQ0FBQyxPQUFPLEVBQUUsVUFBQSxNQUFNO1lBQ2hCLEtBQUksQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzlCLENBQUMsQ0FBQyxDQUFDO1FBQ0gsSUFBSSxDQUFDLFdBQVcsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxTQUFTLENBQUMsY0FBTSxPQUFBLEtBQUksQ0FBQyxpQkFBaUIsR0FBRyxJQUFJLEVBQTdCLENBQTZCLENBQUMsQ0FBQyxDQUFDO0lBQzlGLENBQUM7SUFWRCxzQkFBVyxrQ0FBTzthQUFsQixjQUF1QixNQUFNLENBQUMsSUFBSSxDQUFDLHNCQUFzQixDQUFDLENBQUMsQ0FBQzs7O09BQUE7SUFHNUQsc0JBQVcsa0NBQU87YUFBbEIsY0FBdUIsTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDOzs7T0FBQTtJQVN2QywyQkFBRyxHQUFWLFVBQVcsTUFBd0I7UUFDL0IsSUFBSSxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDMUIsSUFBSSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDcEMsQ0FBQztJQUVNLDhCQUFNLEdBQWIsVUFBYyxNQUF3QjtRQUNsQyxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUM3QixJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNwQyxDQUFDO0lBRU0sK0JBQU8sR0FBZDtRQUNJLElBQUksQ0FBQyxXQUFXLENBQUMsT0FBTyxFQUFFLENBQUM7SUFDL0IsQ0FBQztJQUNMLG9CQUFDO0FBQUQsQ0EvQkEsQUErQkMsSUFBQTtBQS9CWSxxQkFBYSxnQkErQnpCLENBQUEiLCJmaWxlIjoibGliL2hlbHBlcnMvcGx1Z2luLW1hbmFnZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBlYWNoIH0gZnJvbSAnbG9kYXNoJztcbmltcG9ydCB7IElPbW5pc2hhcnBQbHVnaW4gfSBmcm9tICcuLi9lbnVtcyc7XG4vKiB0c2xpbnQ6ZGlzYWJsZTpuby11bnVzZWQtdmFyaWFibGUgKi9cbmltcG9ydCB7IFN1YmplY3QsIE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcbi8qIHRzbGludDplbmFibGU6bm8tdW51c2VkLXZhcmlhYmxlICovXG5pbXBvcnQgeyBDb21wb3NpdGVEaXNwb3NhYmxlLCBJRGlzcG9zYWJsZSB9IGZyb20gJ3RzLWRpc3Bvc2FibGVzJztcblxuZXhwb3J0IGNsYXNzIFBsdWdpbk1hbmFnZXIgaW1wbGVtZW50cyBJRGlzcG9zYWJsZSB7XG4gICAgcHJpdmF0ZSBfZGlzcG9zYWJsZSA9IG5ldyBDb21wb3NpdGVEaXNwb3NhYmxlKCk7XG4gICAgcHJpdmF0ZSBfcGx1Z2luc0NoYW5nZWQgPSBuZXcgU3ViamVjdDxhbnk+KCk7XG4gICAgcHJpdmF0ZSBfY3VycmVudEJvb3RzdHJhcDogc3RyaW5nIHwgbnVsbCA9IG51bGw7XG5cbiAgICBwcml2YXRlIF9vYnNlcnZlUGx1Z2luc0NoYW5nZWQgPSB0aGlzLl9wbHVnaW5zQ2hhbmdlZC5kZWJvdW5jZVRpbWUoMTAwMCk7XG4gICAgcHVibGljIGdldCBjaGFuZ2VkKCkgeyByZXR1cm4gdGhpcy5fb2JzZXJ2ZVBsdWdpbnNDaGFuZ2VkOyB9XG5cbiAgICBwcml2YXRlIF9wbHVnaW5zID0gbmV3IFNldDxJT21uaXNoYXJwUGx1Z2luPigpO1xuICAgIHB1YmxpYyBnZXQgcGx1Z2lucygpIHsgcmV0dXJuIHRoaXMuX3BsdWdpbnM7IH1cblxuICAgIGNvbnN0cnVjdG9yKHBsdWdpbnM6IElPbW5pc2hhcnBQbHVnaW5bXSkge1xuICAgICAgICBlYWNoKHBsdWdpbnMsIHBsdWdpbiA9PiB7XG4gICAgICAgICAgICB0aGlzLl9wbHVnaW5zLmFkZChwbHVnaW4pO1xuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5fZGlzcG9zYWJsZS5hZGQodGhpcy5fcGx1Z2luc0NoYW5nZWQuc3Vic2NyaWJlKCgpID0+IHRoaXMuX2N1cnJlbnRCb290c3RyYXAgPSBudWxsKSk7XG4gICAgfVxuXG4gICAgcHVibGljIGFkZChwbHVnaW46IElPbW5pc2hhcnBQbHVnaW4pIHtcbiAgICAgICAgdGhpcy5fcGx1Z2lucy5hZGQocGx1Z2luKTtcbiAgICAgICAgdGhpcy5fcGx1Z2luc0NoYW5nZWQubmV4dCh0cnVlKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgcmVtb3ZlKHBsdWdpbjogSU9tbmlzaGFycFBsdWdpbikge1xuICAgICAgICB0aGlzLl9wbHVnaW5zLmRlbGV0ZShwbHVnaW4pO1xuICAgICAgICB0aGlzLl9wbHVnaW5zQ2hhbmdlZC5uZXh0KHRydWUpO1xuICAgIH1cblxuICAgIHB1YmxpYyBkaXNwb3NlKCkge1xuICAgICAgICB0aGlzLl9kaXNwb3NhYmxlLmRpc3Bvc2UoKTtcbiAgICB9XG59XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
