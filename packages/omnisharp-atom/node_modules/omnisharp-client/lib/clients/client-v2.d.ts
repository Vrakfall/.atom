import * as OmniSharp from "../omnisharp-server";
import { Observable } from "rxjs";
import { ClientBase, ClientEventsBase } from "./client-base";
import { ClientV1 } from "./client-v1";
import { OmnisharpClientOptions } from "../enums";
export declare class ClientEventsV2 extends ClientEventsBase implements OmniSharp.Events.V2 {
    updatebuffer: Observable<OmniSharp.Context<OmniSharp.Models.UpdateBufferRequest, any>>;
    changebuffer: Observable<OmniSharp.Context<OmniSharp.Models.ChangeBufferRequest, any>>;
    codecheck: Observable<OmniSharp.Context<OmniSharp.Models.CodeCheckRequest, OmniSharp.Models.QuickFixResponse>>;
    formatAfterKeystroke: Observable<OmniSharp.Context<OmniSharp.Models.FormatAfterKeystrokeRequest, OmniSharp.Models.FormatRangeResponse>>;
    formatRange: Observable<OmniSharp.Context<OmniSharp.Models.FormatRangeRequest, OmniSharp.Models.FormatRangeResponse>>;
    codeformat: Observable<OmniSharp.Context<OmniSharp.Models.CodeFormatRequest, OmniSharp.Models.CodeFormatResponse>>;
    autocomplete: Observable<OmniSharp.Context<OmniSharp.Models.AutoCompleteRequest, OmniSharp.Models.AutoCompleteResponse[]>>;
    findimplementations: Observable<OmniSharp.Context<OmniSharp.Models.FindImplementationsRequest, OmniSharp.Models.QuickFixResponse>>;
    findsymbols: Observable<OmniSharp.Context<OmniSharp.Models.FindSymbolsRequest, OmniSharp.Models.QuickFixResponse>>;
    findusages: Observable<OmniSharp.Context<OmniSharp.Models.FindUsagesRequest, OmniSharp.Models.QuickFixResponse>>;
    fixusings: Observable<OmniSharp.Context<OmniSharp.Models.FixUsingsRequest, OmniSharp.Models.FixUsingsResponse>>;
    gotodefinition: Observable<OmniSharp.Context<OmniSharp.Models.GotoDefinitionRequest, OmniSharp.Models.GotoDefinitionResponse>>;
    gotofile: Observable<OmniSharp.Context<OmniSharp.Models.GotoFileRequest, OmniSharp.Models.QuickFixResponse>>;
    gotoregion: Observable<OmniSharp.Context<OmniSharp.Models.GotoRegionRequest, OmniSharp.Models.QuickFixResponse>>;
    highlight: Observable<OmniSharp.Context<OmniSharp.Models.HighlightRequest, OmniSharp.Models.HighlightResponse>>;
    metadata: Observable<OmniSharp.Context<OmniSharp.Models.MetadataRequest, OmniSharp.Models.MetadataResponse>>;
    navigateup: Observable<OmniSharp.Context<OmniSharp.Models.NavigateUpRequest, OmniSharp.Models.NavigateResponse>>;
    navigatedown: Observable<OmniSharp.Context<OmniSharp.Models.NavigateDownRequest, OmniSharp.Models.NavigateResponse>>;
    packagesearch: Observable<OmniSharp.Context<OmniSharp.Models.PackageSearchRequest, OmniSharp.Models.PackageSearchResponse>>;
    packagesource: Observable<OmniSharp.Context<OmniSharp.Models.PackageSourceRequest, OmniSharp.Models.PackageSourceResponse>>;
    packageversion: Observable<OmniSharp.Context<OmniSharp.Models.PackageVersionRequest, OmniSharp.Models.PackageVersionResponse>>;
    rename: Observable<OmniSharp.Context<OmniSharp.Models.RenameRequest, OmniSharp.Models.RenameResponse>>;
    signatureHelp: Observable<OmniSharp.Context<OmniSharp.Models.SignatureHelpRequest, OmniSharp.Models.SignatureHelp>>;
    stopserver: Observable<OmniSharp.Context<any, boolean>>;
    checkalivestatus: Observable<OmniSharp.Context<any, boolean>>;
    checkreadystatus: Observable<OmniSharp.Context<any, boolean>>;
    currentfilemembersastree: Observable<OmniSharp.Context<OmniSharp.Models.MembersTreeRequest, OmniSharp.Models.FileMemberTree>>;
    currentfilemembersasflat: Observable<OmniSharp.Context<OmniSharp.Models.MembersFlatRequest, OmniSharp.Models.QuickFix[]>>;
    typelookup: Observable<OmniSharp.Context<OmniSharp.Models.TypeLookupRequest, OmniSharp.Models.TypeLookupResponse>>;
    filesChanged: Observable<OmniSharp.Context<OmniSharp.Models.Request[], boolean>>;
    projects: Observable<OmniSharp.Context<OmniSharp.Models.v1.WorkspaceInformationRequest, OmniSharp.Models.WorkspaceInformationResponse>>;
    project: Observable<OmniSharp.Context<OmniSharp.Models.v1.ProjectInformationRequest, OmniSharp.Models.ProjectInformationResponse>>;
    getcodeactions: Observable<OmniSharp.Context<OmniSharp.Models.V2.GetCodeActionsRequest, OmniSharp.Models.V2.GetCodeActionsResponse>>;
    runcodeaction: Observable<OmniSharp.Context<OmniSharp.Models.V2.RunCodeActionRequest, OmniSharp.Models.V2.RunCodeActionResponse>>;
    gettestcontext: Observable<OmniSharp.Context<OmniSharp.Models.TestCommandRequest, OmniSharp.Models.GetTestCommandResponse>>;
}
export declare class ClientV2 extends ClientBase<ClientEventsV2> implements OmniSharp.Api.V2 {
    constructor(_options: OmnisharpClientOptions);
    getcodeactions(request: OmniSharp.Models.V2.GetCodeActionsRequest, options?: OmniSharp.RequestOptions): Observable<OmniSharp.Models.V2.GetCodeActionsResponse>;
    runcodeaction(request: OmniSharp.Models.V2.RunCodeActionRequest, options?: OmniSharp.RequestOptions): Observable<OmniSharp.Models.V2.RunCodeActionResponse>;
    updatebuffer: typeof ClientV1.prototype.updatebuffer;
    changebuffer: typeof ClientV1.prototype.changebuffer;
    codecheck: typeof ClientV1.prototype.codecheck;
    formatAfterKeystroke: typeof ClientV1.prototype.formatAfterKeystroke;
    formatRange: typeof ClientV1.prototype.formatRange;
    codeformat: typeof ClientV1.prototype.codeformat;
    autocomplete: typeof ClientV1.prototype.autocomplete;
    findimplementations: typeof ClientV1.prototype.findimplementations;
    findsymbols: typeof ClientV1.prototype.findsymbols;
    findusages: typeof ClientV1.prototype.findusages;
    fixusings: typeof ClientV1.prototype.fixusings;
    gotodefinition: typeof ClientV1.prototype.gotodefinition;
    gotofile: typeof ClientV1.prototype.gotofile;
    gotoregion: typeof ClientV1.prototype.gotoregion;
    highlight: typeof ClientV1.prototype.highlight;
    metadata: typeof ClientV1.prototype.metadata;
    navigateup: typeof ClientV1.prototype.navigateup;
    navigatedown: typeof ClientV1.prototype.navigatedown;
    packagesearch: typeof ClientV1.prototype.packagesearch;
    packagesource: typeof ClientV1.prototype.packagesource;
    packageversion: typeof ClientV1.prototype.packageversion;
    rename: typeof ClientV1.prototype.rename;
    signatureHelp: typeof ClientV1.prototype.signatureHelp;
    stopserver: typeof ClientV1.prototype.stopserver;
    checkalivestatus: typeof ClientV1.prototype.checkalivestatus;
    checkreadystatus: typeof ClientV1.prototype.checkreadystatus;
    currentfilemembersastree: typeof ClientV1.prototype.currentfilemembersastree;
    currentfilemembersasflat: typeof ClientV1.prototype.currentfilemembersasflat;
    typelookup: typeof ClientV1.prototype.typelookup;
    filesChanged: typeof ClientV1.prototype.filesChanged;
    projects: typeof ClientV1.prototype.projects;
    project: typeof ClientV1.prototype.project;
    gettestcontext: typeof ClientV1.prototype.gettestcontext;
}
