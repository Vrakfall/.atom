"use strict";

var _chai = require("chai");

var _omnisharpClient = require("omnisharp-client");

var _testHelpers = require("../test-helpers");

describe("Find Usages", function () {
    (0, _testHelpers.setupFeature)(["features/find-usages"]);
    it("adds commands", function () {
        var disposable = new _omnisharpClient.CompositeDisposable();
        var commands = atom.commands;
        (0, _chai.expect)(commands.registeredCommands["omnisharp-atom:find-usages"]).to.be.true;
        (0, _chai.expect)(commands.registeredCommands["omnisharp-atom:go-to-implementation"]).to.be.true;
        (0, _chai.expect)(commands.registeredCommands["omnisharp-atom:next-usage"]).to.be.true;
        (0, _chai.expect)(commands.registeredCommands["omnisharp-atom:go-to-usage"]).to.be.true;
        (0, _chai.expect)(commands.registeredCommands["omnisharp-atom:previous-usage"]).to.be.true;
        (0, _chai.expect)(commands.registeredCommands["omnisharp-atom:go-to-next-usage"]).to.be.true;
        (0, _chai.expect)(commands.registeredCommands["omnisharp-atom:go-to-previous-usage"]).to.be.true;
        disposable.dispose();
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNwZWMvZmVhdHVyZXMvZmluZC11c2FnZXMtc3BlYy5qcyIsInNwZWMvZmVhdHVyZXMvZmluZC11c2FnZXMtc3BlYy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBOztBQUNBOztBQUNBOztBQ0dBLFNBQVMsYUFBVCxFQUF3QixZQUFBO0FBQ3BCLG1DQUFhLENBQUMsc0JBQUQsQ0FBYjtBQUVBLE9BQUcsZUFBSCxFQUFvQixZQUFBO0FBQ2hCLFlBQU0sYUFBYSwwQ0FBbkI7QUFDQSxZQUFNLFdBQWdCLEtBQUssUUFBM0I7QUFFQSwwQkFBTyxTQUFTLGtCQUFULENBQTRCLDRCQUE1QixDQUFQLEVBQWtFLEVBQWxFLENBQXFFLEVBQXJFLENBQXdFLElBQXhFO0FBQ0EsMEJBQU8sU0FBUyxrQkFBVCxDQUE0QixxQ0FBNUIsQ0FBUCxFQUEyRSxFQUEzRSxDQUE4RSxFQUE5RSxDQUFpRixJQUFqRjtBQUNBLDBCQUFPLFNBQVMsa0JBQVQsQ0FBNEIsMkJBQTVCLENBQVAsRUFBaUUsRUFBakUsQ0FBb0UsRUFBcEUsQ0FBdUUsSUFBdkU7QUFDQSwwQkFBTyxTQUFTLGtCQUFULENBQTRCLDRCQUE1QixDQUFQLEVBQWtFLEVBQWxFLENBQXFFLEVBQXJFLENBQXdFLElBQXhFO0FBQ0EsMEJBQU8sU0FBUyxrQkFBVCxDQUE0QiwrQkFBNUIsQ0FBUCxFQUFxRSxFQUFyRSxDQUF3RSxFQUF4RSxDQUEyRSxJQUEzRTtBQUNBLDBCQUFPLFNBQVMsa0JBQVQsQ0FBNEIsaUNBQTVCLENBQVAsRUFBdUUsRUFBdkUsQ0FBMEUsRUFBMUUsQ0FBNkUsSUFBN0U7QUFDQSwwQkFBTyxTQUFTLGtCQUFULENBQTRCLHFDQUE1QixDQUFQLEVBQTJFLEVBQTNFLENBQThFLEVBQTlFLENBQWlGLElBQWpGO0FBQ0EsbUJBQVcsT0FBWDtBQUNILEtBWkQ7QUFlSCxDQWxCRCIsImZpbGUiOiJzcGVjL2ZlYXR1cmVzL2ZpbmQtdXNhZ2VzLXNwZWMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBleHBlY3QgfSBmcm9tIFwiY2hhaVwiO1xuaW1wb3J0IHsgQ29tcG9zaXRlRGlzcG9zYWJsZSB9IGZyb20gXCJvbW5pc2hhcnAtY2xpZW50XCI7XG5pbXBvcnQgeyBzZXR1cEZlYXR1cmUgfSBmcm9tIFwiLi4vdGVzdC1oZWxwZXJzXCI7XG5kZXNjcmliZShcIkZpbmQgVXNhZ2VzXCIsICgpID0+IHtcbiAgICBzZXR1cEZlYXR1cmUoW1wiZmVhdHVyZXMvZmluZC11c2FnZXNcIl0pO1xuICAgIGl0KFwiYWRkcyBjb21tYW5kc1wiLCAoKSA9PiB7XG4gICAgICAgIGNvbnN0IGRpc3Bvc2FibGUgPSBuZXcgQ29tcG9zaXRlRGlzcG9zYWJsZSgpO1xuICAgICAgICBjb25zdCBjb21tYW5kcyA9IGF0b20uY29tbWFuZHM7XG4gICAgICAgIGV4cGVjdChjb21tYW5kcy5yZWdpc3RlcmVkQ29tbWFuZHNbXCJvbW5pc2hhcnAtYXRvbTpmaW5kLXVzYWdlc1wiXSkudG8uYmUudHJ1ZTtcbiAgICAgICAgZXhwZWN0KGNvbW1hbmRzLnJlZ2lzdGVyZWRDb21tYW5kc1tcIm9tbmlzaGFycC1hdG9tOmdvLXRvLWltcGxlbWVudGF0aW9uXCJdKS50by5iZS50cnVlO1xuICAgICAgICBleHBlY3QoY29tbWFuZHMucmVnaXN0ZXJlZENvbW1hbmRzW1wib21uaXNoYXJwLWF0b206bmV4dC11c2FnZVwiXSkudG8uYmUudHJ1ZTtcbiAgICAgICAgZXhwZWN0KGNvbW1hbmRzLnJlZ2lzdGVyZWRDb21tYW5kc1tcIm9tbmlzaGFycC1hdG9tOmdvLXRvLXVzYWdlXCJdKS50by5iZS50cnVlO1xuICAgICAgICBleHBlY3QoY29tbWFuZHMucmVnaXN0ZXJlZENvbW1hbmRzW1wib21uaXNoYXJwLWF0b206cHJldmlvdXMtdXNhZ2VcIl0pLnRvLmJlLnRydWU7XG4gICAgICAgIGV4cGVjdChjb21tYW5kcy5yZWdpc3RlcmVkQ29tbWFuZHNbXCJvbW5pc2hhcnAtYXRvbTpnby10by1uZXh0LXVzYWdlXCJdKS50by5iZS50cnVlO1xuICAgICAgICBleHBlY3QoY29tbWFuZHMucmVnaXN0ZXJlZENvbW1hbmRzW1wib21uaXNoYXJwLWF0b206Z28tdG8tcHJldmlvdXMtdXNhZ2VcIl0pLnRvLmJlLnRydWU7XG4gICAgICAgIGRpc3Bvc2FibGUuZGlzcG9zZSgpO1xuICAgIH0pO1xufSk7XG4iLCIvLy8gPHJlZmVyZW5jZSBwYXRoPVwiLi4vdHNkLmQudHNcIiAvPlxuaW1wb3J0IHtleHBlY3R9IGZyb20gXCJjaGFpXCI7XG5pbXBvcnQge0NvbXBvc2l0ZURpc3Bvc2FibGV9IGZyb20gXCJvbW5pc2hhcnAtY2xpZW50XCI7XG5pbXBvcnQge3NldHVwRmVhdHVyZX0gZnJvbSBcIi4uL3Rlc3QtaGVscGVyc1wiO1xuXG5kZXNjcmliZShcIkZpbmQgVXNhZ2VzXCIsICgpID0+IHtcbiAgICBzZXR1cEZlYXR1cmUoW1wiZmVhdHVyZXMvZmluZC11c2FnZXNcIl0pO1xuXG4gICAgaXQoXCJhZGRzIGNvbW1hbmRzXCIsICgpID0+IHtcbiAgICAgICAgY29uc3QgZGlzcG9zYWJsZSA9IG5ldyBDb21wb3NpdGVEaXNwb3NhYmxlKCk7XG4gICAgICAgIGNvbnN0IGNvbW1hbmRzOiBhbnkgPSBhdG9tLmNvbW1hbmRzO1xuXG4gICAgICAgIGV4cGVjdChjb21tYW5kcy5yZWdpc3RlcmVkQ29tbWFuZHNbXCJvbW5pc2hhcnAtYXRvbTpmaW5kLXVzYWdlc1wiXSkudG8uYmUudHJ1ZTtcbiAgICAgICAgZXhwZWN0KGNvbW1hbmRzLnJlZ2lzdGVyZWRDb21tYW5kc1tcIm9tbmlzaGFycC1hdG9tOmdvLXRvLWltcGxlbWVudGF0aW9uXCJdKS50by5iZS50cnVlO1xuICAgICAgICBleHBlY3QoY29tbWFuZHMucmVnaXN0ZXJlZENvbW1hbmRzW1wib21uaXNoYXJwLWF0b206bmV4dC11c2FnZVwiXSkudG8uYmUudHJ1ZTtcbiAgICAgICAgZXhwZWN0KGNvbW1hbmRzLnJlZ2lzdGVyZWRDb21tYW5kc1tcIm9tbmlzaGFycC1hdG9tOmdvLXRvLXVzYWdlXCJdKS50by5iZS50cnVlO1xuICAgICAgICBleHBlY3QoY29tbWFuZHMucmVnaXN0ZXJlZENvbW1hbmRzW1wib21uaXNoYXJwLWF0b206cHJldmlvdXMtdXNhZ2VcIl0pLnRvLmJlLnRydWU7XG4gICAgICAgIGV4cGVjdChjb21tYW5kcy5yZWdpc3RlcmVkQ29tbWFuZHNbXCJvbW5pc2hhcnAtYXRvbTpnby10by1uZXh0LXVzYWdlXCJdKS50by5iZS50cnVlO1xuICAgICAgICBleHBlY3QoY29tbWFuZHMucmVnaXN0ZXJlZENvbW1hbmRzW1wib21uaXNoYXJwLWF0b206Z28tdG8tcHJldmlvdXMtdXNhZ2VcIl0pLnRvLmJlLnRydWU7XG4gICAgICAgIGRpc3Bvc2FibGUuZGlzcG9zZSgpO1xuICAgIH0pO1xuXG4gICAgLy8gVE9ETzogVGVzdCBmdW5jdGlvbmFsaXR5XG59KTtcbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
