// dependencies ****************************************************************
var db = require('pg');
var crypto = require('crypto');

// for(var i=0; i<test.length; i++) {
//   exports.test = test[i];
// }

// Constants *******************************************************************

var operatorName = 'admin_tracking_system';
var operatorPassword = 'Tigrou123';
var dbIP = '10.113.31.66';
var dbPort = '5432';
var dbName = 'tracking_system';
// var connectionString = 'postgres://' + operatorName + ':' + operatorPassword + '@' + bdIP + ':' + dbPort +'/' + dbName;
// var connectionString = 'postgres://ugixsxtaagdclj:QrD256EJyTa84nQiHYDhU1RcW_@ec2-54-228-219-2.eu-west-1.compute.amazonaws.com:5432/d8iol7h2qu762t'; // Development database
var clientInfo = {
  user: 'ugixsxtaagdclj',
  password: 'QrD256EJyTa84nQiHYDhU1RcW_',
  host: 'ec2-54-228-219-2.eu-west-1.compute.amazonaws.com',
  port: 5432,
  database: 'd8iol7h2qu762t',
  ssl: true
};

// CLIENT **********************************************************************

//Open a connection to the database
exports.getClient = function() {
  var cl = new db.Client(clientInfo);
  cl.on('error', function(error) {
    console.log(error);
  });
  cl.connect();
  return cl;
};

// Sub-files
var databaseHelperSchedules = require('./databaseHelperSchedules');

for (var method in databaseHelperSchedules) {
  console.log('method name: ' + method);
  exports[method] = databaseHelperSchedules[method];
}

//Must be called when you're done with the database !
exports.endClient = function(client) {
  client.end();
};

// DOORS ***********************************************************************

exports.getAllDoors = function(client, callback) {
  var results = [];
  var query = client.query('SELECT * FROM door ORDER BY id_door');

  query.on('row', function(row) {
    results.push(row);
  });

  query.on('end', function() {
    if (typeof callback === 'function') {
      callback(results);
    }
  });
};

exports.getDoor = function(client, id, callback) {
  var query = client.query('SELECT * FROM door WHERE id_door = ' + id + ';');
  var result;
  query.on('row', function(row) {
    result = row;
  });
  query.on('end', function() {
    if (typeof callback === 'function') {
      callback(result);
    }
  });
};

exports.createDoor = function(client, name, building, floor, number, callback) {
  var id;
  var query = client.query('INSERT INTO door(name, building, floor, number) VALUES($1, $2, $3, $4) RETURNING id_door;', [name, building, floor, number]);
  query.on('error', function(error) {
    console.log(error);
  });
  query.on('row', function(row) {
    id = row.id_door;
  });
  query.on('end', function() {
    if (typeof callback === 'function') {
      callback(id);
    }
  });
};

exports.updateDoor = function(client, id, name, building, floor, number, callback) {
  console.log('upadte a door with name : ' + name);
  var query = client.query('UPDATE door SET name = $2, building = $3, floor = $4, number = $5 WHERE id_door = $1', [id, name, building, floor, number]);
  query.on('end', function() {
    if (typeof callback === 'function') {
      callback();
    }
  });
};

exports.deleteDoor = function(client, id, callback) {
  var query = client.query('DELETE FROM door WHERE id_door = $1;', [id]);
  query.on('end', function() {
    if (typeof callback === 'function') {
      callback();
    }
  });
};

// ISSUES ********************************************************************

exports.getAllIssues = function(client, callback) {
  var results = [];
  var query = client.query('SELECT * FROM issue ORDER BY name');

  query.on('row', function(row) {
    results.push(row);
  });

  query.on('end', function() {
    if (typeof callback === 'function') {
      callback(results);
    }
  });
};

exports.getIssue = function(client, id, callback) {
  var query = client.query('SELECT * FROM issue WHERE id_issue = ' + id + ';');
  var result;
  query.on('row', function(row) {
    result = row;
  });
  query.on('end', function() {
    if (typeof callback === 'function') {
      callback(result);
    }
  });
};

exports.createIssue = function(client, name, description, callback) {
  console.log('Create a new issue with name : ' + name);
  var id;
  var query = client.query("INSERT INTO issue(name, description) VALUES($1, $2) RETURNING id_issue;", [name, description]);
  query.on('error', function(error) {
    console.log(error);
  });
  query.on('row', function(row) {
    id = row.id_issue;
  });
  query.on('end', function() {
    if (typeof callback === 'function') {
      callback(id);
    }
  });
};

exports.updateIssue = function(client, id, name, description, callback) {
  console.log('upadte a issue with name : ' + name);
  var query = client.query('UPDATE issue SET name = $2, description = $3 WHERE id_issue = $1', [id, name, description]);
  query.on('end', function() {
    if (typeof callback === 'function') {
      callback();
    }
  });
};

exports.deleteIssue = function(client, id, callback) {
  console.log('Delete a issue with id : ' + id);
  var query = client.query('DELETE FROM issue WHERE id_issue = $1;', [id]);
  query.on('end', function() {
    if (typeof callback === 'function') {
      callback();
    }
  });
};

// ROUTES ********************************************************************

exports.getAllRoutes = function(client, callback) {
  var results = [];
  var query = client.query('SELECT route.*, (SELECT COUNT(*) FROM route_door WHERE route_door.id_route = route.id_route) AS doors_amount FROM route ORDER BY route.name;');

  query.on('row', function(row) {
    results.push(row);
  });

  query.on('end', function() {
    if (typeof callback === 'function') {
      callback(results);
    }
  });
};

exports.getRoute = function(client, id, callback) {
  var query = client.query('SELECT * FROM route WHERE id_route = ' + id + ';');
  var result;
  query.on('row', function(row) {
    result = row;
  });
  query.on('end', function() {
    if (typeof callback === 'function') {
      callback(result);
    }
  });
};

exports.createRoute = function(client, name, duration, callback) {
  console.log('Create a new route with name : ' + name);
  var id;
  var query = client.query("INSERT INTO route(name, theoretical_duration) VALUES($1, $2) RETURNING id_route;", [name, duration]);
  query.on('row', function(row) {
    id = row.id_route;
  });
  query.on('end', function() {
    if (typeof callback === 'function') {
      callback(id);
    }
  });
};

exports.updateRoute = function(client, id, name, duration, callback) {
  console.log('upadte a route with name : ' + name);
  var query = client.query('UPDATE route SET name = $2, theorical_duration = $3 WHERE id_route = $1', [id, name, duration]);
  query.on('end', function() {
    if (typeof callback === 'function') {
      callback();
    }
  });
};

exports.deleteRoute = function(client, id, callback) {
  console.log('Delete a route with id : ' + id);
  var query = client.query('DELETE FROM route WHERE id_route = $1;', [id]);
  query.on('end', function() {
    if (typeof callback === 'function') {
      callback();
    }
  });
};

// ROUTE DOOR **************************************************************

exports.getRoutesByDoorId = function(client, doorId, callback) {
  var results = [];
  var query = client.query('SELECT * FROM route WHERE id_route = (SELECT id_route FROM route_door WHERE id_door = $1);', [doorId]);

  query.on('row', function(row) {
    results.push(row);
  });

  query.on('end', function() {
    if (typeof callback === 'function') {
      callback(results);
    }
  });
}

exports.getDoorsByRouteId = function(client, routeId, callback) {
  var results = [];
  var query = client.query('SELECT door.id_route, door.name, door_building, door.floor, foor.number, route_door.door_order ' +
    'FROM door, route_door ' +
    'WHERE route_door.id_route = $1 AND door.id_door = route_door.id_door;', [routeId]);

  query.on('row', function(row) {
    results.push(row);
  });

  query.on('end', function() {
    if (typeof callback === 'function') {
      callback(results);
    }
  });
}

exports.addDoorToRoute = function(client, routeId, doorId, order, callback) {
  var query = client.query('INSERT INTO route_door(id_route, id_door, door_order) VALUES($1, $2, $3);', [routeId, doorId, order]);
  query.on('end', function() {
    if (typeof callback === 'function') {
      callback();
    }
  });
};

exports.updateDoorInRoute = function(client, routeId, doorId, order, callback) {
  var query = client.query('UPDATE route_door SET door_order = $3 WHERE id_route = $1 AND id_door = $2;', [routeId, doorId, order]);
  query.on('end', function() {
    if (typeof callback === 'function') {
      callback();
    };
  });
};

exports.deleteDoorFromRoute = function(client, routeId, doorId, callback) {
  var query = client.query('DELETE FROM route_door WHERE id_route = $1 AND id_door = $2;', [routeID, doorId]);
  query.on('end', function() {
    if (typeof callback === 'function') {
      callback();
    }
  });
};

// DOOR ISSUES ***************************************************************

exports.insertDoorIssue = function(client, id_door, id_issue, start_day, callback) {
  var start_day_final = "\'" + start_day + "\'";
  var query = client.query('INSERT INTO door_issue( ' +
    'id_door, id_issue, start_day, end_day, comment) ' +
    'VALUES ($1, $2, ' + start_day_final + ', null, null);', [id_door, id_issue]);
  query.on('end', function() {
    if (typeof callback === 'function') {
      callback();
    }
  });
};

exports.getAllDoorIssues = function(client, callback) {
  var results = [];
  var query = client.query('SELECT issue.id_issue, door.id_door, door.name AS door_name, issue.name AS issue_name, TO_CHAR(door_issue.start_day, \'dd-mm-YYYY\') AS start_day, TO_CHAR(door_issue.end_day, \'dd-mm-YYYY\') AS end_day, door_issue.comment ' +
    'FROM door_issue, door, issue ' +
    'WHERE door.id_door = door_issue.id_door AND door_issue.id_issue = issue.id_issue ' +
    'ORDER BY end_day DESC;');

  query.on('row', function(row) {
    results.push(row);
  });

  query.on('end', function() {
    if (typeof callback === 'function') {
      callback(results);
    }
  });
};

exports.getDoorIssueByID = function(client, id_door, id_issue, start_day, callback) {
  var result;

  var start_day_final = "\'" + start_day + "\'";
  var query = client.query('SELECT door.id_door, issue.id_issue, door.name AS door_name, issue.name AS issue_name, TO_CHAR(door_issue.start_day, \'dd-mm-YYYY\') AS start_day, TO_CHAR(door_issue.end_day, \'dd-mm-YYYY\') AS end_day, door_issue.comment ' +
    'FROM door_issue, door, issue ' +
    'WHERE door_issue.id_door = $1 AND door_issue.id_issue = $2 AND door_issue.start_day = TO_TIMESTAMP(' + start_day_final + ', \'dd-mm-YYYY\') AND door.id_door = $1 AND issue.id_issue = $2;', [id_door, id_issue]);

  query.on('row', function(row) {
    result = row;
  });

  query.on('end', function() {
    if (typeof callback === 'function') {
      callback(result);
    }
  });
};

exports.updateDoorIssue = function(client, id_door, id_issue, start_day, end_day, comment, callback) {
  var start_day_final = "\'" + start_day + "\'";
  var end_day_final = "\'" + end_day + "\'";
  var query = client.query('UPDATE door_issue ' +
    'SET end_day = TO_TIMESTAMP(' + end_day_final + ', \'dd-mm-YYYY\'), comment = $3 ' +
    'WHERE id_issue = $2 AND id_door = $1 AND start_day = TO_TIMESTAMP(' + start_day_final + ', \'dd-mm-YYYY\');', [id_door, id_issue, comment]);
  query.on('end', function() {
    if (typeof callback === 'function') {
      callback();
    }
  });
};

// ROUTE ASSIGNMENT **********************************************************

exports.addRouteToGuardian = function(client, guardianId, routeId, callback) {
  var id;
  var query = client.query("INSERT INTO route_assignment(id_guardian, id_route) VALUES($1, $2) RETURNING id_assign;", [guardianId, routeId]);

  query.on('row', function(row) {
    id = row.id_assign;
  });
  query.on('end', function() {
    if (typeof callback === 'function') {
      callback(id);
    }
  });
};

exports.deleteRouteFromGuardian = function(client, guardianId, routeId, callback) {
  var query = client.query("DELETE FROM route_assignment WHERE id_guardian = $1 AND id_route = $2;", [guardianId, routeId]);

  query.on('end', function() {
    if (typeof callback === 'function') {
      callback();
    }
  });
};

exports.deleteRouteFromGuardian = function(client, assignId, callback) {
  var query = client.query("DELETE FROM route_assignment WHERE id_assign = $1;", [assignId]);

  query.on('end', function() {
    if (typeof callback === 'function') {
      callback();
    }
  });
};

exports.getRoutesByGuardianId = function(client, guardianId, callback) {
  var results = [];
  var query = client.query('SELECT route.* ' +
    'FROM route, route_assignment ' +
    'WHERE route.id_route = route_assignment.id_guardian AND route_assignment.id_guardian = $1;', [guardianId]);

  query.on('row', function(row) {
    results.push(row);
  });

  query.on('end', function() {
    if (typeof callback === 'function') {
      callback(results);
    }
  });
};

exports.getGuardiansByRouteId = function(client, routeId, callback) {
  var results = [];
  var query = client.query('SELECT guardian.* ' +
    'FROM guardian, route_assignment ' +
    'WHERE guardian.id_guardian = route_assignment.id_guardian AND route_assignment.id_route = $1;', [routeId]);

  query.on('row', function(row) {
    results.push(row);
  });

  query.on('end', function() {
    if (typeof callback === 'function') {
      callback(results);
    }
  });
};

exports.getAssignByRouteAndGuardian = function(client, routeId, guardianId, callback) {
  var result = {
    id_assign: -1
  };
  var query = client.query('SELECT * FROM route_assignment WHERE id_route = $1 AND id_guardian = $2', [routeId, guardianId]);
  query.on('row', function(row) {
    result = row;
  });
  query.on('end', function() {
    if (typeof callback === 'function') {
      callback(result);
    }
  })
}

// COVERED ROUTE *************************************************************

exports.addCoveredRoute = function(client, assignId, coveredDay, callback) {
  var query = client.query('INSERT INTO covered_route(id_assign, covered_day, completed) VALUES($1, $2, $3);', [assignId, coveredDay, false]);
  query.on('end', function() {
    if (typeof callback === 'function') {
      callback();
    }
  });
};

exports.updateCoveredRoute = function(client, assignId, coveredDay, completed, callback) {
  var query = client.query('UPDATE covered_route SET completed = $3 WHERE id_assign = $1 AND covered_day = $2;', [assignId, coveredDay, completed]);
  query.on('end', function() {
    if (typeof callback === 'function') {
      callback();
    }
  });
};

// COVERED DOORS *************************************************************

exports.addCoveredDoor = function(client, assignId, coveredDay, doorId, coveredHour, callback) {
  var query = client.query('INSERT INTO covered_door(id_assign, covered_day, id_door, covered_hour) VALUES($1, $2, $3, $4);', [assignId, coveredDay, doorId, coveredHour]);
  query.on('end', function() {
    if (typeof callback === 'function') {
      callback();
    };
  });
};
